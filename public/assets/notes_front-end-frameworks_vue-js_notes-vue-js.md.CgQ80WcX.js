import{_ as s,c as e,o as i,a3 as a}from"./chunks/framework.BOYmvpOd.js";const g=JSON.parse('{"title":"Vue JS","description":"","frontmatter":{"title":"Vue JS"},"headers":[],"relativePath":"notes/front-end-frameworks/vue-js/notes-vue-js.md","filePath":"notes/front-end-frameworks/vue-js/notes-vue-js.md"}'),t={name:"notes/front-end-frameworks/vue-js/notes-vue-js.md"},n=a(`<h1 id="vue-js" tabindex="-1">Vue Js <a class="header-anchor" href="#vue-js" aria-label="Permalink to &quot;Vue Js&quot;">‚Äã</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">‚Äã</a></h2><p>Vue est un framework javascript permettant de coder rapidement des interfaces utilisateurs. Sa logique se base sur la d√©claration de composants √† utiliser dans l&#39;application.</p><p>Il y a deux notions cl√©s dans la logique du framework Vue :</p><ul><li>Rendu d√©claratif : la construction sous forme de HTML via les templates.</li><li>R√©activit√© : Tracker de mani√®re efficiente les changements dans le DOM.</li></ul><p>Vue est &#39;client side rendered&#39; soit ex√©cut√© du c√¥t√© du client, ce qui est logique car Vue est un framework JavaScript et le JavaScript est √©x√©cut√© c√¥t√© client.</p><p>Vue est flexible, adaptable et √©volutif. Il peut √™tre utiliser dans diff√©rents besoin simple comme complexe, d&#39;o√π son slogan &quot;The progressive framework&quot;, il promet de nous satisfaire dans nos diff√©rents cas d&#39;usage.</p><p>Vue impl√©mente une logique de single file components</p><ul><li>single page application</li><li>re-rendering html</li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">‚Äã</a></h2><ul><li>CDN =&gt; /!\\ On ne peut b√©n√©ficier de la syntaxe Single-File Component si on utilise un CDN car Vue ne sera pas builder.</li><li>package npm</li></ul><p>Cr√©er un projet</p><ul><li>npm create vue@latest : cr√©er un projet vue avec vite</li><li>ES Module build ?</li></ul><h2 id="comprehension-de-base" tabindex="-1">Compr√©hension de base <a class="header-anchor" href="#comprehension-de-base" aria-label="Permalink to &quot;Compr√©hension de base&quot;">‚Äã</a></h2><p>Pour en prendre en main Vue JS et comprendre les m√©caniques de base du framework, il est n√©cessaire de comprendre ces premi√®res notions.</p><p>üóÇÔ∏è Projets Repo :</p><ul><li>Github : <a href="https://github.com/NithaThghm/learning_vuejs.git" target="_blank" rel="noreferrer">https://github.com/NithaThghm/learning_vuejs.git</a></li></ul><h3 id="composant-monofichier-single-file-component" tabindex="-1">Composant monofichier (Single-File Component) <a class="header-anchor" href="#composant-monofichier-single-file-component" aria-label="Permalink to &quot;Composant monofichier (Single-File Component)&quot;">‚Äã</a></h3><p>Un peu d√©routant au d√©but, mais l&#39;architecture d&#39;un fichier <code>.vue</code> se r√©v√®le √™tre tr√®s &#39;handy&#39;. On retrouve notre CSS, HTML et JS dans un seul et m√™me fichier qui d√©crit un composant de notre application et tout se passe dans le m√™me fichier. Je trouve √ßa tr√®s bien. L&#39;avantage de la balise <code>&lt;template&gt;</code> est que Vue interpr√©tera le JavaScript embarqu√© sous le HTML. C&#39;est un m√©lange de HTML/JavaScript qui peut porter √† confusion, mais si on le garde √† l&#39;esprit on s&#39;en sort.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>La balise <code>&lt;template&gt;</code> est obligatoire dans un fichier <code>.vue</code>. <code>&lt;style scoped&gt;</code> : Best practise! Le css n&#39;impacte que les √©l√©ments du fichier dans lequel il r√©side.</p></div><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .. JavaScript here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- .. HTML / JavaScript here --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* .. CSS here */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="style-d-api" tabindex="-1">Style d&#39;API <a class="header-anchor" href="#style-d-api" aria-label="Permalink to &quot;Style d&#39;API&quot;">‚Äã</a></h3><ul><li><p>option api : <code>&lt;script&gt;</code> Coding style utilis√© dans la version 1 et 2 de Vue.</p></li><li><p>composition api : <code>&lt;script setup&gt;</code> Vue comprendra qu&#39;on utilise la logique composition API. Coding style plus concis qui am√©liore et simplifie l&#39;usage de Vue depuis Vue 3. Le style composition API est nettement plus agr√©able a utiliser et √©crire que l&#39;option Api. N√©anmoins, on se doit d&#39;avoir une compr√©hesnion du style options API si jamais on le rencontre.</p></li></ul><h3 id="les-fondamentaux-de-la-reactivite" tabindex="-1">Les fondamentaux de la r√©activit√© <a class="header-anchor" href="#les-fondamentaux-de-la-reactivite" aria-label="Permalink to &quot;Les fondamentaux de la r√©activit√©&quot;">‚Äã</a></h3><h4 id="usage-simple" tabindex="-1">Usage simple <a class="header-anchor" href="#usage-simple" aria-label="Permalink to &quot;Usage simple&quot;">‚Äã</a></h4><ul><li>import { ref } from &quot;vue&quot; : vue ne rafraichit que les √©tat, pour √©viter de supprimer et de re-render le html</li></ul><p><code>ref</code> est un attribut sp√©cial fournit par Vue.js, il y a en a d&#39;autre comme <code>key</code> par exemple. Il permet de d√©clarer des variables accessible uniquement au template mont√©.</p><p>Pour avoir l&#39;objet DOM d&#39;un √©l√©ment, nous devons faire r√©f√©rence au <code>ref</code> dans la m√©thode <code>onMounted</code> sinon nous n&#39;aurons pas acc√®s aux data. Ceci est d√ªt au fait que Vue a d&#39;abord besoin de g√©n√©rer les templates puis de g√©n√©rer les <code>ref</code>, les √©tapes sont asynchrones et Vue semble g√©rer cette asynchronicit√© dans sa m√©thode <code>onMounted</code>.</p><p>D√©clarer et utiliser un <code>ref</code> sous le style api composition :</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref, onMounted } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> refTest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Msg stock√© dans ma ref&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onMounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        input.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(input.value.id) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//Affichera : &quot;test&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(input.value.id) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Affichera : &quot;Uncaught (in promise) TypeError: can&#39;t access property &quot;id&quot;, input.value is null&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ refTest }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Affichera : &#39;Msg stock√© dans ma ref&#39; --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="usage-plus-pousse" tabindex="-1">Usage plus pouss√© <a class="header-anchor" href="#usage-plus-pousse" aria-label="Permalink to &quot;Usage plus pouss√©&quot;">‚Äã</a></h4><p>Nous pouvons faire appeler des fonctions en <code>ref</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{} /&gt;</span></span></code></pre></div><p>üìñ Sources :</p><ul><li><a href="https://fr.vuejs.org/guide/essentials/template-refs.html" target="_blank" rel="noreferrer">https://fr.vuejs.org/guide/essentials/template-refs.html</a></li><li><a href="https://fr.vuejs.org/api/built-in-special-attributes.html#ref" target="_blank" rel="noreferrer">https://fr.vuejs.org/api/built-in-special-attributes.html#ref</a></li><li><a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide/Modules" target="_blank" rel="noreferrer">https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide/Modules</a></li></ul><h3 id="directives" tabindex="-1">Directives <a class="header-anchor" href="#directives" aria-label="Permalink to &quot;Directives&quot;">‚Äã</a></h3><p>v-on=&quot;click&quot; : shorthand =&gt; @click</p><h3 id="ecoute-d-evenement" tabindex="-1">Ecoute d&#39;√©v√®nement <a class="header-anchor" href="#ecoute-d-evenement" aria-label="Permalink to &quot;Ecoute d&#39;√©v√®nement&quot;">‚Äã</a></h3><h2 id="comprehension-avancee" tabindex="-1">Compr√©hension avanc√©e <a class="header-anchor" href="#comprehension-avancee" aria-label="Permalink to &quot;Compr√©hension avanc√©e&quot;">‚Äã</a></h2><h2 id="expert-vue-js" tabindex="-1">Expert Vue JS <a class="header-anchor" href="#expert-vue-js" aria-label="Permalink to &quot;Expert Vue JS&quot;">‚Äã</a></h2><p><a href="https://fr.vuejs.org/guide/extras/ways-of-using-vue.html" target="_blank" rel="noreferrer">https://fr.vuejs.org/guide/extras/ways-of-using-vue.html</a><a href="https://fr.vuejs.org/guide/scaling-up/sfc.html" target="_blank" rel="noreferrer">https://fr.vuejs.org/guide/scaling-up/sfc.html</a></p><h2 id="terminologie" tabindex="-1">Terminologie <a class="header-anchor" href="#terminologie" aria-label="Permalink to &quot;Terminologie&quot;">‚Äã</a></h2><p>Single-File Component (SFC Vue)</p>`,43),l=[n];function r(p,h,o,d,k,u){return i(),e("div",null,l)}const E=s(t,[["render",r]]);export{g as __pageData,E as default};
